# To update firmware
#make clean
#make menuconfig
#make
#sudo service klipper stop
#make flash FLASH_DEVICE=/dev/serial/by-id/...
#may need this, probably not: sudo dfu-util -p 1-1.3 -R -a 0 -s 0x8000000:leave -D /home/tycho-printer/klipper/out/klipper.bin
# ** remove jumper BOOT0/3.3V
# ** press reset button
#sudo service klipper start


# use the following modifiers before the pin definition (ex: ^!ar99)
# ! 			invert the logic
# ^ 			activate 5v pullup (does not apply to all pins)
# mcu_name: 	use pins on additional MCU (ex: z:ar10)


# MCU - Fysetc Spider V1 - extruder, hotends, fans, etc
# STM32F446: 180mhz processor, 32kb bootloader, 12mhz clock only - will require erase otherwise
[mcu]
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_11001F000550305538333620-if00
restart_method: command

# MCU - ANNEX Supernova #1 - X Axis Motors
# STM32 Blackpill (stm32f103xe)
[mcu supernovax]
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_6679150000C0542810879C07-if00
restart_method: command

# MCU - ANNEX Supernova #2 - Y Axis Motors
# STM32 Blackpill (stm32f103xe)
[mcu supernovay]
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_6779150000C0542810874007-if00
restart_method: command

# MCU - ANNEX Supernova #3 - Z Axis Motors
# STM32 Blackpill (stm32f103xe)
[mcu supernovaz]
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_6179150000C0542810074007-if00
restart_method: command

# # MCU - Crampon Nozzle Accelerometer
# [mcu crampon]
# serial: /dev/serial/by-id/usb-Klipper_stm32l412xx_2F001F000850305230353720-if00

# # Crampon ADXL345 Settings
# [adxl345]
# cs_pin: crampon:PA4
# spi_bus: spi1
# spi_speed: 8000000
# ##spi_software_mosi_pin: PB5
# ##spi_software_miso_pin: PA6
# ##spi_software_sclk_pin: PB3

# [resonance_tester]
# probe_points: 175, 175, 50 #center of bed
# accel_per_hz: 100
# hz_per_sec: 0.5
# accel_chip: adxl345

# [static_digital_output crampon_led]
# pins: !crampon:PA15

#virtual sdcard settings
[virtual_sdcard]
path: ~/gcode_files

#enable display status for moonraker
[display_status]

# Enable Pause/Resume Functionality
[pause_resume]

#Printer Controls
[printer]
kinematics: cartesian
max_velocity: 550
max_accel_to_decel: 99999999
max_accel: 15000
max_z_velocity: 25
max_z_accel: 500
square_corner_velocity: 15.0

#Gcode G2/G3 Arc Support
[gcode_arcs]
resolution: 0.1

#Input Shaper Settings
[input_shaper]
shaper_freq_x: 67.8
shaper_freq_y: 71.4
shaper_type: mzv

# Steppers
[stepper_x]
# connected to Stepper #1 on Supernova X - Front Left
step_pin: supernovax:PB14
dir_pin: supernovax:PB13
enable_pin: !supernovax:PB15
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 128
full_steps_per_rotation: 200
# connected to virtual endstop
endstop_pin: tmc5160_stepper_x:virtual_endstop 
position_min: 0
position_endstop: 0
position_max: 366
homing_speed: 80.0
homing_retract_dist: 0.0
homing_positive_dir: false
 
[stepper_x1]
# connected to Stepper #2 on Supernova X - Rear Left
step_pin: supernovax:PA9
dir_pin: !supernovax:PA8
enable_pin: !supernovax:PA10
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 128
full_steps_per_rotation: 200
# connected to virtual endstop
endstop_pin: tmc5160_stepper_x1:virtual_endstop 

[stepper_x2]
# connected to Stepper #3 on Supernova X - Rear Right
step_pin: supernovax:PB5
dir_pin: !supernovax:PB4
enable_pin: !supernovax:PB6
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 128
full_steps_per_rotation: 200
# connected to virtual endstop - linked to stepper X1
endstop_pin: tmc5160_stepper_x1:virtual_endstop  

[stepper_x3]
# connected to Stepper #4 on Supernova X - Front Right
step_pin: supernovax:PB8
dir_pin: supernovax:PB7
enable_pin: !supernovax:PB9
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 128
full_steps_per_rotation: 200
# connected to virtual endstop - linked to stepper X
endstop_pin: tmc5160_stepper_x:virtual_endstop 


[stepper_y]
# connected to Stepper #1 on Supernova Y - Front Left
step_pin: supernovay:PB14
dir_pin: supernovay:PB13
enable_pin: !supernovay:PB15
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 128
full_steps_per_rotation: 200
# connected to virtual endstop
endstop_pin: tmc5160_stepper_y:virtual_endstop 
position_min: 0
position_endstop: 366
position_max: 366
homing_speed: 80.0
homing_retract_dist: 0.0
homing_positive_dir: true
 
[stepper_y1]
# connected to Stepper #2 on Supernova Y - Rear Left
step_pin: supernovay:PA9
dir_pin: supernovay:PA8
enable_pin: !supernovay:PA10
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 128
full_steps_per_rotation: 200
# connected to virtual endstop
endstop_pin: tmc5160_stepper_y1:virtual_endstop 

[stepper_y2]
# connected to Stepper #3 on Supernova Y - Rear Right
step_pin: supernovay:PB5
dir_pin: !supernovay:PB4
enable_pin: !supernovay:PB6
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 128
full_steps_per_rotation: 200
# connected to virtual endstop - linked to stepper Y1
endstop_pin: tmc5160_stepper_y1:virtual_endstop  

[stepper_y3]
# connected to Stepper #4 on Supernova Y - Front Right
step_pin: supernovay:PB8
dir_pin: !supernovay:PB7
enable_pin: !supernovay:PB9
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 128
full_steps_per_rotation: 200
# connected to virtual endstop - linked to stepper Y
endstop_pin: tmc5160_stepper_y:virtual_endstop


[stepper_z]
# connected to Stepper #1 on Supernova Z (Front Left Stepper, from top)
step_pin: supernovaz:PB14
dir_pin: supernovaz:PB13
enable_pin: !supernovaz:PB15
# 20t Pulley, 2mm Pitch on a 1.8deg Motor with a 60:1 worm drive
rotation_distance: 40
microsteps: 8
full_steps_per_rotation: 200
gear_ratio: 20:1
# connected to Z- Endstop on S6
endstop_pin: probe:z_virtual_endstop

position_max: 275
position_min: -3
homing_speed: 10.0
second_homing_speed: 5.0
homing_retract_dist: 15.0
homing_positive_dir: false
 
[stepper_z1]
# connected to Stepper #2 on Supernova Z (Rear Left Stepper, from top)
step_pin: supernovaz:PA9
dir_pin: !supernovaz:PA8
enable_pin: !supernovaz:PA10
# 20t Pulley, 2mm Pitch on a 1.8deg Motor with a 60:1 worm drive
rotation_distance: 40
microsteps: 8
full_steps_per_rotation: 200
gear_ratio: 20:1
 
[stepper_z2]
# connected to Stepper #3 on Supernova Z (Rear Right Stepper, from top)
step_pin: supernovaz:PB5
dir_pin: supernovaz:PB4
enable_pin: !supernovaz:PB6
# 20t Pulley, 2mm Pitch on a 1.8deg Motor with a 60:1 worm drive
rotation_distance: 40
microsteps: 8
full_steps_per_rotation: 200
gear_ratio: 20:1

[stepper_z3]
# connected to Stepper #4 on Supernova Z (Front Right Stepper, from top)
step_pin: supernovaz:PB8
dir_pin: !supernovaz:PB7
enable_pin: !supernovaz:PB9
# 20t Pulley, 2mm Pitch on a 1.8deg Motor with a 60:1 worm drive
rotation_distance: 40
microsteps: 8
full_steps_per_rotation: 200
gear_ratio: 20:1

#TMC Stepper Driver Settings
[tmc5160 stepper_x]
# connected to Stepper #1 on Supernova X - Front Left
cs_pin: supernovax:PB0
spi_bus: spi1
diag1_pin: ^!supernovax:PB12
interpolate: false
run_current: 1.3
hold_current: 0.7
sense_resistor: 0.075
driver_SGT: 2 # -64 is most sensitive value, 63 is least sensitive

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0

[tmc5160 stepper_x1]
# connected to Stepper #2 on Supernova X - Rear Left
cs_pin: supernovax:PA4
spi_bus: spi1
diag1_pin: ^!supernovax:PA15
stealthchop_threshold: 0
interpolate: false
run_current: 1.3
hold_current: 0.7
sense_resistor: 0.075
driver_SGT: 2 # -64 is most sensitive value, 63 is least sensitive

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0

[tmc5160 stepper_x2]
# connected to Stepper #3 on Supernova X - Rear Right
cs_pin: supernovax:PA2
spi_bus: spi1
#diag1_pin: ^!supernovax:PB10
stealthchop_threshold: 0
interpolate: false
run_current: 1.3
hold_current: 0.7
sense_resistor: 0.075

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0

[tmc5160 stepper_x3]
# connected to Stepper #4 on Supernova X - Front Right
cs_pin: supernovax:PA1
spi_bus: spi1
#diag1_pin: ^!supernovax:PB3
stealthchop_threshold: 0
interpolate: false
run_current: 1.3
hold_current: 0.7
sense_resistor: 0.075

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0


#TMC Stepper Driver Settings
[tmc5160 stepper_y]
# connected to Stepper #1 on Supernova Y - Front Left
cs_pin: supernovay:PB0
spi_bus: spi1
diag1_pin: ^!supernovay:PB12
interpolate: false
run_current: 1.3
hold_current: 0.7
sense_resistor: 0.075
driver_SGT: 2 # -64 is most sensitive value, 63 is least sensitive

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0

[tmc5160 stepper_y1]
# connected to Stepper #2 on Supernova Y - Rear Left
cs_pin: supernovay:PA4
spi_bus: spi1
diag1_pin: ^!supernovay:PA15
stealthchop_threshold: 0
interpolate: false
run_current: 1.3
hold_current: 0.7
sense_resistor: 0.075
driver_SGT: 2 # -64 is most sensitive value, 63 is least sensitive

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0

[tmc5160 stepper_y2]
# connected to Stepper #3 on Supernova Y - Rear Right
cs_pin: supernovay:PA2
spi_bus: spi1
#diag1_pin: ^!supernovay:PB10
stealthchop_threshold: 0
interpolate: false
run_current: 1.3
hold_current: 0.7
sense_resistor: 0.075

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0

[tmc5160 stepper_y3]
# connected to Stepper #4 on Supernova Y - Front Right
cs_pin: supernovay:PA1
spi_bus: spi1
#diag1_pin: ^!supernovay:PB3
stealthchop_threshold: 0
interpolate: false
run_current: 1.3
hold_current: 0.7
sense_resistor: 0.075

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0


[tmc5160 stepper_z]
# connected to Stepper #1 on Supernova Z (Front Left Stepper, from top)
cs_pin: supernovaz:PB0
spi_bus: spi1
spi_speed: 4000000
stealthchop_threshold: 0
interpolate: false
run_current: 1.20
sense_resistor: 0.075

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0

[tmc5160 stepper_z1]
# connected to Stepper #2 on Supernova Z (Rear Left Stepper, from top)
cs_pin: supernovaz:PA4
spi_bus: spi1
spi_speed: 4000000
stealthchop_threshold: 0
interpolate: false
run_current: 1.20
sense_resistor: 0.075

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0

[tmc5160 stepper_z2]
# connected to Stepper #3 on Supernova Z (Rear Right Stepper, from top)
cs_pin: supernovaz:PA2
spi_bus: spi1
spi_speed: 4000000
stealthchop_threshold: 0
interpolate: false
run_current: 1.20
sense_resistor: 0.075

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0

[tmc5160 stepper_z3]
# connected to Stepper #4 on Supernova Z (Front Right Stepper, from top)
cs_pin: supernovaz:PA1
spi_bus: spi1
spi_speed: 4000000
stealthchop_threshold: 0
interpolate: false
run_current: 1.20
sense_resistor: 0.075

#custom driver settings
driver_TBL: 1
driver_HSTRT: 7
driver_HEND: 7
driver_TPFD: 0


[tmc2209 extruder]
# connected to Stepper Z on Spider
uart_pin: PD10
stealthchop_threshold: 0
interpolate: false
run_current: 0.35
hold_current: 0.15
sense_resistor: 0.110


# Force Move
#	used to force a single stepper to move.  not used once setup
[force_move]
enable_force_move: true

# homing override
[homing_override]
gcode:
	#variables
  	{% set HOME_CUR = 0.80 %}
  	{% set driver_config = printer.configfile.settings['tmc5160 stepper_x'] %}
  	{% set RUN_CUR = driver_config.run_current %}
  	{% set HOLD_CUR = driver_config.hold_current %}
    #Drop Down Z
        G91              #relative positioning
		SET_KINEMATIC_POSITION Z=0
		G1 Z10 F1200       #move z 10mm down to clear bed
        G90              #absolute positioning
	#Set homing current
		SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
		SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
		SET_TMC_CURRENT STEPPER=stepper_x2 CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
		SET_TMC_CURRENT STEPPER=stepper_x3 CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
		SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}	
		SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}	
		SET_TMC_CURRENT STEPPER=stepper_y2 CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}	
		SET_TMC_CURRENT STEPPER=stepper_y3 CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}	
	#Home X Axis at Current Point
        G28 X0
    # Home Y Axis at X = 175mm
		G1 X175 F12000
        G28 Y0
	# ReHome X Axis at Y = 175mm
		G1 Y175 F12000
        G28 X0
	# Restore run currents
		SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}
		SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}
		SET_TMC_CURRENT STEPPER=stepper_x2 CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}
		SET_TMC_CURRENT STEPPER=stepper_x3 CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}
  		SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}	
		SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}	
		SET_TMC_CURRENT STEPPER=stepper_y2 CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}	
		SET_TMC_CURRENT STEPPER=stepper_y3 CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}	
    # Home Z Axis
        G1 X175 Y175 F12000 #move z to center to home
        G28 Z0          #home z axis
		G1 Z15 F1800	#move to Z=15

# Beacon Config
[beacon]
# MCU - beacon z probe
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevD_7A862B114E53434A47202020FF030D33-if00

x_offset: 15.3 # offset for beacon x direction off nozzle
y_offset: 15.3 # offset for beacon y direction off nozzle
mesh_main_direction: x # travel for meshing primarily in the X direction (defaults to Y)
mesh_overscan: 5 # travel 5mm past the mesh to form an sharp turn
speed: 10 #probe speed
mesh_runs: 2 #number of passes to run

# Extruder0
[extruder]
# connected to Stepper Z on Spider
step_pin: PD14
dir_pin: !PD13
enable_pin: !PD15
rotation_distance: 22.67895 #for 5mm Shaft Driven Bondtech gearsets
gear_ratio: 50:8 #Sherpa Mini uses 50:8
microsteps: 16
full_steps_per_rotation: 200 #1.8deg Motor

#0.4mm Nozzle
nozzle_diameter: 0.400
pressure_advance: 0.020
pressure_advance_smooth_time: 0.030
filament_diameter: 1.750	
max_extrude_only_distance: 1400.0
max_extrude_only_velocity: 125.0
max_extrude_only_accel: 3000.0
max_extrude_cross_section: 20000.0

# Multipins
#[multi_pin magnum_plus]
#pins: PB15, PC8 # Spider - Extruder 0 and 1

# connected to Spider - Extruder 0
heater_pin: PB15
max_power: 1.0

# connected to Thermistor Bed on Spider
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC3
smooth_time: 0.3

#0.4mm Nozzle Settings
smooth_time: 0.3
max_power: 1.0
control: pid
# default settings
pid_Kp: 21.772 
pid_Ki: 1.512 
pid_Kd: 78.370


min_extrude_temp: 0
min_temp: 0
max_temp: 325

[verify_heater extruder]
hysteresis: 20
check_gain_time: 80
heating_gain: 1
max_error: 500

 
# Heated Bed  
[heater_bed]
# connected to Spider - Extruder 2
heater_pin: PB3
# NTC 100K MGB18-104F39050L32 is for Kenovo thermistors
sensor_type: NTC 100K MGB18-104F39050L32
# connected to Thermistor0 on Spider
sensor_pin: PC0
smooth_time: 3.0

#350mm Build Plate Settings
max_power: 0.60
control: pid
pid_Kp: 42.475 
pid_Ki: 1.395 
pid_Kd: 323.339

min_temp: 0
max_temp: 130

[verify_heater heater_bed]
hysteresis: 2.5
check_gain_time: 240

# Raspberry Pi Temperature Sensor
[temperature_sensor micro_pc]
sensor_type: temperature_host
gcode_id: P
 
# Fans  
#	thermally controlled hotend fan
[heater_fan my_nozzle_fan]
# connected to Fan0 on Spider - 12v Fan
pin: PB0
max_power: 1.0
kick_start_time: 0.500
heater: extruder
heater_temp: 75.0
fan_speed: 1.00
 
# print cooling fan
[fan]
# connected to Fan1 on Spider - 12v Fan
pin: PB1
max_power: 1.0
kick_start_time: 0

# Electronics Fans
[controller_fan electronics_fan]
# connected to Fan2 on Spider - 24v Fan
pin: PB2
max_power: 1.0
kick_start_time: 1.00
fan_speed: 0.4
idle_timeout: 240
shutdown_speed: 1.0
cycle_time: 0.03
heater: heater_bed


# Chamber Lighting
[output_pin chamber_lighting]
# connected to Spider - Heater Bed
pin: PB4
value: 0
shutdown_value: 0


# Mesh Bed Settings
[bed_mesh]
speed: 500
horizontal_move_z: 5
mesh_min: 30,30
mesh_max: 320,320
probe_count: 75,75
move_check_distance: 5.0
split_delta_z: 0.025
#fade_start: 2.0
#fade_end: 5.0
mesh_pps: 0,0

# Z Tilt Bed Adjustment settings
[z_tilt]
z_positions: -121,-33
			 -121,436
			 478,436
			 478,-33
points: 20,30
		20,315
		310,315
		310,30
speed: 500
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.025


# Motor and Heater Idle Timeout
[idle_timeout]
gcode:
	#blank so it does nothing to the heaters or motors
timeout: 60

# Enable the respond command
[respond]
default_type: echo
default_prefix: echo:



#	Macros
#	pre-print-prep macro
[gcode_macro pre_print_prep]
gcode:
    {% set BEACON_TARGET = params.BEACON_TARGET|default(69) %}
    {% set BEACON_MAXIMUM = params.BEACON_TARGET|default(69)|int + 3 %}

    BED_MESH_CLEAR
	chamber_lighting_on ;turn on lighting
    abs_warmup_temp ;tell bed to warm up
	M106 S10	 ;turn part cooling fan to 5%
	G1 Z1 F200
	RESPOND MSG="Cooking Bacon"
    TEMPERATURE_WAIT sensor="temperature_sensor beacon_coil" MINIMUM={BEACON_TARGET} MAXIMUM={BEACON_MAXIMUM}
    RESPOND MSG="Bacon is done"
	Z_TILT_ADJUST	;adjust bed so its square to gantry
    mesh_bed ;Run Bed Mesh

	#	pre-print-prep macro for polycarbonate
[gcode_macro pre_print_prep_PC]
gcode:
    {% set BEACON_TARGET = params.BEACON_TARGET|default(69) %}
    {% set BEACON_MAXIMUM = params.BEACON_TARGET|default(69)|int + 3 %}

    BED_MESH_CLEAR
	chamber_lighting_on ;turn on lighting
    pc_warmup_temp ;tell bed to warm up
	M106 S10	 ;turn part cooling fan to 5%
	G1 Z1 F200
	RESPOND MSG="Cooking Bacon"
    TEMPERATURE_WAIT sensor="temperature_sensor beacon_coil" MINIMUM={BEACON_TARGET} MAXIMUM={BEACON_MAXIMUM}
    RESPOND MSG="Bacon is done"
	Z_TILT_ADJUST	;adjust bed so its square to gantry
    mesh_bed ;Run Bed Mesh

#	macro to level the gantry.  use G32 in the terminal to call
[gcode_macro g32]
gcode:
		Z_TILT_ADJUST	;adjust bed so its square to gantry
	
#	macro to level bed to the gantry
[gcode_macro square_bed_to_machine]
gcode:
		Z_TILT_ADJUST	;adjust bed so its square to gantry

#	mesh bed level the machine
[gcode_macro mesh_bed]
gcode:
		BED_MESH_CALIBRATE	;Run Bed Mesh

#	combined print start gcode macro that takes into account temperature from the slicer
[gcode_macro print_start]
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(260) %}
    {% set BED = params.BED|default(110) %}
	print_start_1			;print start macro 1
	M140 S{BED}			;set bed temperature and wait
	M109 S{EXTRUDER}		;set hotend temperature and wait
	M190 S{BED}			;set bed temperature and do not wait
	prime_line_regular	;draw prime line in corner of bed

[gcode_macro print_start_1]
gcode:
	M104 S0 #cancel set temp
	M107 #turn cooling fans off
	G21  # set units to mm
	G90  # use absolute coordinates
	M83	# use relative extrusion
	G92 E0.0  # reset e count
	M220 S100 # reset speed multiplier
	G0 X10 Y10 F12000
    G0 Z20.0 F600
	
[gcode_macro prime_line_regular]
gcode:
	G1 X10 Y10 F12000
	G1 Z0.5 F600
	G1 Y70 E20 F600
	G1 Y100 E8 F600
	G92 E0.0             ;set extruder to Zero
    G90                  ;set to absolute

#    Use print_end for you slicer ending script    
[gcode_macro print_end]
gcode:
	G91  							#relative positioning
	G0 E-0.7 F4800  				#retract 5mm of filament
	G0 Z+1.00 X-2 Y-2 F18000  		#short quick move to disengage from print
	G0 Z+5.00  F600  				#move Z-Axis 1mm away from part

	G90  					#absolute positioning
	G0 X50 Y50 F18000 		#move gantry close to xy min, by nozzle switch in front
	G91  					#relative positioning
	G0 E10 F400			#extrude filament to get better blob on end
	G0 E-0.30 F1800  		#retract additional filament to move out of melt zone
	G90 					#absolute positioning

	M104 S0  				#turn off hotend
	#M140 S0  				#turn off heatbed


	#z bed placement control for end of print
    SAVE_GCODE_STATE NAME=END_state
    {% if printer.toolhead.position.z|float == printer.configfile.config["stepper_z"]["position_max"]|float %} #if z position = z max do the following
        # do nothing
    {% elif printer.toolhead.position.z|float >= 130|float %}    #if z position >= 130mnm do the following
        G91              #relative positioning
        G1 Z+10 F1200     #move z down 10mm
        G90              #absolute positioning
    {% else %}  		 #if you dont meet any of the criteria
        G90              #absolute positioning
        G1 Z130 F1200     #move z to 130mm
    {% endif %}
    RESTORE_GCODE_STATE NAME=END_state

	M106 S0  				#shut off part cooling fans
	#M84					#turn off motors
	clear_pause				#clear pause state encase it was enabled

#	Macro to execute when pausing printer
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_minimum.x|float + 10.0 %}
    {% set y_park = printer.toolhead.axis_minimum.y|float + 40.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F1200
    G90
    G1 X{x_park} Y{y_park} F6000

#	Macro to execute when resuming printer
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

#	Macro to execute when canceling a print
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    print_end #execute the print end macro
	CLEAR_PAUSE
  	SDCARD_RESET_FILE
  	BASE_CANCEL_PRINT

#	Notify when ABS Timer is complete
[delayed_gcode notify_chamber]
initial_duration: 0
gcode:
 {gcode.action_respond_info("action:prompt_begin Chamber Preheated")}
 {action_respond_info("action:prompt_choice OK")}
 {action_respond_info("action:prompt_show")}

#	Set Temps for chamber warmup when printing with abs 
[gcode_macro abs_warmup_temp]
gcode:
		{% set BED = params.BED|default(110) %}
		M190 S{BED}				#set bed temperature and wait
		G28							#home machine
		move_to_center		#move to center of bed
		UPDATE_DELAYED_GCODE ID=notify_chamber DURATION=1200

#	Set Temps for chamber warmup when printing with pc 
[gcode_macro pc_warmup_temp]
gcode:
		{% set BED = params.BED|default(125) %}
		M190 S{BED}				#set bed temperature and wait
		G28							#home machine
		move_to_center		#move to center of bed
		UPDATE_DELAYED_GCODE ID=notify_chamber DURATION=1200

#	Notify when filament is unloaded and ready to reload
[delayed_gcode notify_extruder_reload]
initial_duration: 0
gcode:
 {action_respond_info("action:prompt_begin Ready to Load Filament")}
 {action_respond_info("action:prompt_choice OK")}
 {action_respond_info("action:prompt_show")}

#	Macro to Load Filament
[gcode_macro load_filament]
gcode:
		{% set EXTRUDER = params.EXTRUDER|default(260) %}
		turn_fans_off			#turn part cooling fans off
        {% if printer.toolhead.position.z|float == printer.configfile.config["stepper_z"]["position_max"]|float %} #if z position = z max do the following
            # do nothing
        {% elif printer.toolhead.position.z|float >= 50|float %}    #if z position >= 50mnm do the following
            #do nothing
        {% else %}  		 #if you dont meet any of the criteria
            G90              #absolute positioning
            G1 Z50 F1200     #move z to 50mm
        {% endif %}
		G0 X10 Y40 F18000		#move to area where can easily load filament
		M109 S{EXTRUDER}		#set hotend temperature and wait
		M83						#relative positioning on extruder	
		G0 E250 F400  			#prime extruder
		#M109 S0					#turn off extruder
		UPDATE_DELAYED_GCODE ID=notify_extruder_load DURATION=10

#	Notify when filament is loaded
[delayed_gcode notify_extruder_load]
initial_duration: 0
gcode:
 {action_respond_info("action:prompt_begin FIlament is Loaded")}
 {action_respond_info("action:prompt_choice OK")}
 {action_respond_info("action:prompt_show")}

#	Macro to Unload Filament
[gcode_macro unload_filament]
gcode:
		{% set EXTRUDER = params.EXTRUDER|default(260) %}
		turn_fans_off			#turn part cooling fans off
        {% if printer.toolhead.position.z|float == printer.configfile.config["stepper_z"]["position_max"]|float %} #if z position = z max do the following
            # do nothing
        {% elif printer.toolhead.position.z|float >= 50|float %}    #if z position >= 50mnm do the following
            #do nothing
        {% else %}  		 #if you dont meet any of the criteria
            G90              #absolute positioning
            G1 Z50 F1200     #move z to 50mm
        {% endif %}
		G0 X10 Y40 F18000		#move to area where can easily load filament
		M109 S{EXTRUDER}		#set hotend temperature and wait	
		M83						#relative positioning on extruder
		G0 E5 F400			#extrude filament to get better blob on end
		G0 E-600 F1800  		#retract additional filament to move out of melt zone
		UPDATE_DELAYED_GCODE ID=notify_extruder_reload DURATION=10

#	Macro for M600 - filament out pause resume 
[gcode_macro M600]
gcode:
    {% set X = params.X|default(40) %}
    {% set Y = params.Y|default(40) %}
    {% set Z = params.Z|default(10) %}
	{% if printer.toolhead.status == "Ready" %}
		# do nothing
	{% else %}
    	M117 Filament Change
		SAVE_GCODE_STATE NAME=M600_state
    	PAUSE
		G91
		G1 E-5 F4000
		G1 Z{Z} F600
		G90
		G1 X{X} Y{Y} F3000
		G0 E15 F1800			#extrude filament to get better blob on end
		G0 E-500 F4800  		#retract additional filament to move out of melt zone
		RESTORE_GCODE_STATE NAME=M600_state
	{% endif %}

#	Use this command to load filament during a mid print filament swap	
[gcode_macro SWAP_RESUME] 
gcode:
 	M117 Printing...
	LOAD_FILAMENT
	RESUME

#	Macro to Turn Fans Off
[gcode_macro turn_fans_off]
gcode:
	M107
	
#	Macro to Turn Chamber Lighting Off
[gcode_macro chamber_lighting_off]
gcode:
	SET_PIN PIN=chamber_lighting VALUE=0

#	Macro to Turn Chamber Lighting On
[gcode_macro chamber_lighting_on]
gcode:
	SET_PIN PIN=chamber_lighting VALUE=1

# Get Current Position
[gcode_macro get_current_position]
gcode:
	M114

# Move to Center and Turn Fans On
[gcode_macro move_to_center]
gcode:
	G1 X175 Y175 Z3 F1800		#move to center

# Turn Motors Off
[gcode_macro motors_off]
gcode:
	M84

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [beacon model default]
#*# model_coef = 1.676332178799045,
#*# 	  2.4711215497200194,
#*# 	  0.65686439392324,
#*# 	  -5.8420412789436185,
#*# 	  4.591257018523227,
#*# 	  28.107422015142753,
#*# 	  -9.032357564249587,
#*# 	  -42.14668281169934,
#*# 	  7.426917621550995,
#*# 	  22.53779165472744
#*# model_temp = 69.0
#*# model_domain = 2.944035463881016e-07,3.374521714759767e-07
#*# model_range = 0.200000,10.500000
#*# model_offset: 0.530 #fudge factor for nozzle offset from bed, + = more away, - = more close (this is fucking important)